image: Visual Studio 2017
environment:
  nodejs_version: "6.9.1"
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1

install:
  # Download .NET Core 2.0 SDK and add to PATH
  - ps: $urlCurrent = "https://dotnetcli.azureedge.net/dotnet/Sdk/2.0.0/dotnet-sdk-2.0.0-win-x64.zip"
  - ps: $env:DOTNET_INSTALL_DIR = "$pwd\.dotnetsdk"
  - ps: mkdir $env:DOTNET_INSTALL_DIR -Force | Out-Null
  - ps: $tempFileCurrent = [System.IO.Path]::GetTempFileName()
  - ps: (New-Object System.Net.WebClient).DownloadFile($urlCurrent, $tempFileCurrent)
  - ps: Add-Type -AssemblyName System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::ExtractToDirectory($tempFileCurrent, $env:DOTNET_INSTALL_DIR)
  - ps: $env:Path = "$env:DOTNET_INSTALL_DIR;$env:Path"
  - ps: $nugetUrl = "https://www.nuget.org/nuget.exe"
  - ps: mkdir /.nuget
  - ps: $nugetFileName = "/.nuget/nuget.exe"
  - ps: (New-Object System.Net.WebClient).DownloadFile($nugetUrl, $nugetFileName)
  - ps: $publishOutDir = "/.build"
  - ps: mkdir $publishOutDir
  - ps: $OutputPath1 = Resolve-Path /.build/*.nuget

init:
  - git config --global core.autocrlf true
build_script:
  - dotnet --version
  - dotnet restore
  - dotnet build -c Release
  - ps: dotnet pack -c Release -o "/.build"
  - ps: $OutputPath = Resolve-Path /.build/*.nuget
  - ps: /.nuget/nuget.exe push $OutputPath $env:NUGET_API_KEY -Source $env:NUGET_SOURCE
  
clone_depth: 1
test: off
